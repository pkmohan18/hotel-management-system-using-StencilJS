/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface AboutPage {
    }
    interface AddRooms {
    }
    interface AdminApprove {
    }
    interface AdminHome {
    }
    interface AdminNav {
    }
    interface AppRoot {
    }
    interface ContactPage {
    }
    interface ErrorMessage {
        "message": string;
        "success": boolean;
    }
    interface FacilitiesPage {
    }
    interface HomePage {
    }
    interface LoginPage {
    }
    interface LogoutComponent {
    }
    interface RegisterPage {
    }
    interface SampleTest {
        "greeting": string;
    }
    interface UserHome {
    }
    interface UserNav {
    }
    interface UserProfile {
    }
    interface ViewBooking {
    }
    interface ViewMyBooking {
    }
    interface ViewRooms {
    }
    interface ViewUser {
    }
}
declare global {
    interface HTMLAboutPageElement extends Components.AboutPage, HTMLStencilElement {
    }
    var HTMLAboutPageElement: {
        prototype: HTMLAboutPageElement;
        new (): HTMLAboutPageElement;
    };
    interface HTMLAddRoomsElement extends Components.AddRooms, HTMLStencilElement {
    }
    var HTMLAddRoomsElement: {
        prototype: HTMLAddRoomsElement;
        new (): HTMLAddRoomsElement;
    };
    interface HTMLAdminApproveElement extends Components.AdminApprove, HTMLStencilElement {
    }
    var HTMLAdminApproveElement: {
        prototype: HTMLAdminApproveElement;
        new (): HTMLAdminApproveElement;
    };
    interface HTMLAdminHomeElement extends Components.AdminHome, HTMLStencilElement {
    }
    var HTMLAdminHomeElement: {
        prototype: HTMLAdminHomeElement;
        new (): HTMLAdminHomeElement;
    };
    interface HTMLAdminNavElement extends Components.AdminNav, HTMLStencilElement {
    }
    var HTMLAdminNavElement: {
        prototype: HTMLAdminNavElement;
        new (): HTMLAdminNavElement;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLContactPageElement extends Components.ContactPage, HTMLStencilElement {
    }
    var HTMLContactPageElement: {
        prototype: HTMLContactPageElement;
        new (): HTMLContactPageElement;
    };
    interface HTMLErrorMessageElement extends Components.ErrorMessage, HTMLStencilElement {
    }
    var HTMLErrorMessageElement: {
        prototype: HTMLErrorMessageElement;
        new (): HTMLErrorMessageElement;
    };
    interface HTMLFacilitiesPageElement extends Components.FacilitiesPage, HTMLStencilElement {
    }
    var HTMLFacilitiesPageElement: {
        prototype: HTMLFacilitiesPageElement;
        new (): HTMLFacilitiesPageElement;
    };
    interface HTMLHomePageElement extends Components.HomePage, HTMLStencilElement {
    }
    var HTMLHomePageElement: {
        prototype: HTMLHomePageElement;
        new (): HTMLHomePageElement;
    };
    interface HTMLLoginPageElement extends Components.LoginPage, HTMLStencilElement {
    }
    var HTMLLoginPageElement: {
        prototype: HTMLLoginPageElement;
        new (): HTMLLoginPageElement;
    };
    interface HTMLLogoutComponentElement extends Components.LogoutComponent, HTMLStencilElement {
    }
    var HTMLLogoutComponentElement: {
        prototype: HTMLLogoutComponentElement;
        new (): HTMLLogoutComponentElement;
    };
    interface HTMLRegisterPageElement extends Components.RegisterPage, HTMLStencilElement {
    }
    var HTMLRegisterPageElement: {
        prototype: HTMLRegisterPageElement;
        new (): HTMLRegisterPageElement;
    };
    interface HTMLSampleTestElement extends Components.SampleTest, HTMLStencilElement {
    }
    var HTMLSampleTestElement: {
        prototype: HTMLSampleTestElement;
        new (): HTMLSampleTestElement;
    };
    interface HTMLUserHomeElement extends Components.UserHome, HTMLStencilElement {
    }
    var HTMLUserHomeElement: {
        prototype: HTMLUserHomeElement;
        new (): HTMLUserHomeElement;
    };
    interface HTMLUserNavElement extends Components.UserNav, HTMLStencilElement {
    }
    var HTMLUserNavElement: {
        prototype: HTMLUserNavElement;
        new (): HTMLUserNavElement;
    };
    interface HTMLUserProfileElement extends Components.UserProfile, HTMLStencilElement {
    }
    var HTMLUserProfileElement: {
        prototype: HTMLUserProfileElement;
        new (): HTMLUserProfileElement;
    };
    interface HTMLViewBookingElement extends Components.ViewBooking, HTMLStencilElement {
    }
    var HTMLViewBookingElement: {
        prototype: HTMLViewBookingElement;
        new (): HTMLViewBookingElement;
    };
    interface HTMLViewMyBookingElement extends Components.ViewMyBooking, HTMLStencilElement {
    }
    var HTMLViewMyBookingElement: {
        prototype: HTMLViewMyBookingElement;
        new (): HTMLViewMyBookingElement;
    };
    interface HTMLViewRoomsElement extends Components.ViewRooms, HTMLStencilElement {
    }
    var HTMLViewRoomsElement: {
        prototype: HTMLViewRoomsElement;
        new (): HTMLViewRoomsElement;
    };
    interface HTMLViewUserElement extends Components.ViewUser, HTMLStencilElement {
    }
    var HTMLViewUserElement: {
        prototype: HTMLViewUserElement;
        new (): HTMLViewUserElement;
    };
    interface HTMLElementTagNameMap {
        "about-page": HTMLAboutPageElement;
        "add-rooms": HTMLAddRoomsElement;
        "admin-approve": HTMLAdminApproveElement;
        "admin-home": HTMLAdminHomeElement;
        "admin-nav": HTMLAdminNavElement;
        "app-root": HTMLAppRootElement;
        "contact-page": HTMLContactPageElement;
        "error-message": HTMLErrorMessageElement;
        "facilities-page": HTMLFacilitiesPageElement;
        "home-page": HTMLHomePageElement;
        "login-page": HTMLLoginPageElement;
        "logout-component": HTMLLogoutComponentElement;
        "register-page": HTMLRegisterPageElement;
        "sample-test": HTMLSampleTestElement;
        "user-home": HTMLUserHomeElement;
        "user-nav": HTMLUserNavElement;
        "user-profile": HTMLUserProfileElement;
        "view-booking": HTMLViewBookingElement;
        "view-my-booking": HTMLViewMyBookingElement;
        "view-rooms": HTMLViewRoomsElement;
        "view-user": HTMLViewUserElement;
    }
}
declare namespace LocalJSX {
    interface AboutPage {
    }
    interface AddRooms {
    }
    interface AdminApprove {
    }
    interface AdminHome {
    }
    interface AdminNav {
    }
    interface AppRoot {
    }
    interface ContactPage {
    }
    interface ErrorMessage {
        "message"?: string;
        "success"?: boolean;
    }
    interface FacilitiesPage {
    }
    interface HomePage {
    }
    interface LoginPage {
    }
    interface LogoutComponent {
    }
    interface RegisterPage {
    }
    interface SampleTest {
        "greeting"?: string;
    }
    interface UserHome {
    }
    interface UserNav {
    }
    interface UserProfile {
    }
    interface ViewBooking {
    }
    interface ViewMyBooking {
    }
    interface ViewRooms {
    }
    interface ViewUser {
    }
    interface IntrinsicElements {
        "about-page": AboutPage;
        "add-rooms": AddRooms;
        "admin-approve": AdminApprove;
        "admin-home": AdminHome;
        "admin-nav": AdminNav;
        "app-root": AppRoot;
        "contact-page": ContactPage;
        "error-message": ErrorMessage;
        "facilities-page": FacilitiesPage;
        "home-page": HomePage;
        "login-page": LoginPage;
        "logout-component": LogoutComponent;
        "register-page": RegisterPage;
        "sample-test": SampleTest;
        "user-home": UserHome;
        "user-nav": UserNav;
        "user-profile": UserProfile;
        "view-booking": ViewBooking;
        "view-my-booking": ViewMyBooking;
        "view-rooms": ViewRooms;
        "view-user": ViewUser;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "about-page": LocalJSX.AboutPage & JSXBase.HTMLAttributes<HTMLAboutPageElement>;
            "add-rooms": LocalJSX.AddRooms & JSXBase.HTMLAttributes<HTMLAddRoomsElement>;
            "admin-approve": LocalJSX.AdminApprove & JSXBase.HTMLAttributes<HTMLAdminApproveElement>;
            "admin-home": LocalJSX.AdminHome & JSXBase.HTMLAttributes<HTMLAdminHomeElement>;
            "admin-nav": LocalJSX.AdminNav & JSXBase.HTMLAttributes<HTMLAdminNavElement>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "contact-page": LocalJSX.ContactPage & JSXBase.HTMLAttributes<HTMLContactPageElement>;
            "error-message": LocalJSX.ErrorMessage & JSXBase.HTMLAttributes<HTMLErrorMessageElement>;
            "facilities-page": LocalJSX.FacilitiesPage & JSXBase.HTMLAttributes<HTMLFacilitiesPageElement>;
            "home-page": LocalJSX.HomePage & JSXBase.HTMLAttributes<HTMLHomePageElement>;
            "login-page": LocalJSX.LoginPage & JSXBase.HTMLAttributes<HTMLLoginPageElement>;
            "logout-component": LocalJSX.LogoutComponent & JSXBase.HTMLAttributes<HTMLLogoutComponentElement>;
            "register-page": LocalJSX.RegisterPage & JSXBase.HTMLAttributes<HTMLRegisterPageElement>;
            "sample-test": LocalJSX.SampleTest & JSXBase.HTMLAttributes<HTMLSampleTestElement>;
            "user-home": LocalJSX.UserHome & JSXBase.HTMLAttributes<HTMLUserHomeElement>;
            "user-nav": LocalJSX.UserNav & JSXBase.HTMLAttributes<HTMLUserNavElement>;
            "user-profile": LocalJSX.UserProfile & JSXBase.HTMLAttributes<HTMLUserProfileElement>;
            "view-booking": LocalJSX.ViewBooking & JSXBase.HTMLAttributes<HTMLViewBookingElement>;
            "view-my-booking": LocalJSX.ViewMyBooking & JSXBase.HTMLAttributes<HTMLViewMyBookingElement>;
            "view-rooms": LocalJSX.ViewRooms & JSXBase.HTMLAttributes<HTMLViewRoomsElement>;
            "view-user": LocalJSX.ViewUser & JSXBase.HTMLAttributes<HTMLViewUserElement>;
        }
    }
}
